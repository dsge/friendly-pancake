## News  [/news]

### News list [GET]

Csak 'manager' jogosultsággal használható.

+ Response 200 (application/json)

    + Attributes(NewsPager)

### Create news [POST]

Csak 'manager' jogosultsággal használható.

+ Request (application/json)

    + Body

            {
                "title": "News title" (required, string),
                "content": "News content" (required, string),
                "published_at": "2018-07-06 12:00:00" (required, string),
                "roles": [Role, Role] (optional, Array[Role])
            }

+ Response 201 (application/json)

    + Attributes(News)

## News Details [/news/{news_id}]

Csak 'manager' jogosultsággal használható.

+ Parameters
    + news_id (required, number, `1`) - News ID

### News detail [GET]

+ Response 200 (application/json)

    + Attributes(NewsDetailed)

### Edit news data [PUT]

Csak 'manager' jogosultsággal használható.

+ Request (application/json)

    + Body

            {
                "title": "News title" (optional, string),
                "content": "News content" (optional, string),
                "published_at": "2018-07-06 12:00:00" (optional, string),
                "roles": [Role, Role] (optional, Array[Role])
            }

+ Response 200 (application/json)

### Delete news [DELETE]

Csak 'manager' jogosultsággal használható.

+ Response 200 (application/json)

## News title image [/news/{news_id}/title_image]

Csak 'manager' jogosultsággal használható.

+ Parameters
    + news_id (required, number, `1`) - News ID

### Upload title image [POST]

+ Request (multipart/form-data; boundary=BOUNDARY)

    + Body

            --BOUNDARY
            Content-Disposition: form-data; name='image'; filename='image.jpg'
            Content-Type: image/jpeg

            {file content}
            --BOUNDARY--

+ Response 200 (application/json)

### Delete title image [DELETE]

Csak 'manager' jogosultsággal használható.

+ Response 200 (application/json)

## News with role [/role/{role_slug}/news]

### List News with role [GET /role/{role_slug}/news?{page}]

+ Parameters
    + role_slug (required, enum[string]) - User role
        + Members
            + accountant
            + hr
            + accountant_client
            + hr_client
            + business_partner
    + page (optional, number, `1`)

+ Response 200 (application/json)

    + Attribute (NewsPager)

### Get a single News details with role [GET /role/{role_slug}/news/{news_id}]

+ Parameters
    + role_slug (required, enum[string]) - User role
        + Members
            + accountant
            + hr
            + accountant_client
            + hr_client
            + business_partner
    + news_id (required, number, `1`)

+ Response 200 (application/json)

    + Attribute (NewsDetailed)

+ Response 404 (application/json)
